[{"C:\\vscode\\webdevpractice\\src\\sections\\Foot.js":"1","C:\\vscode\\webdevpractice\\src\\sections\\Login.js":"2","C:\\vscode\\webdevpractice\\src\\index.js":"3","C:\\vscode\\webdevpractice\\src\\sections\\Register.js":"4","C:\\vscode\\webdevpractice\\src\\sections\\Navlist.js":"5","C:\\vscode\\webdevpractice\\src\\recoil\\signStatus.js":"6","C:\\vscode\\webdevpractice\\src\\recoil\\SignStatus.js":"7","C:\\vscode\\webdevpractice\\src\\memu\\index.js":"8","C:\\vscode\\webdevpractice\\src\\sections\\index.js":"9","C:\\vscode\\webdevpractice\\src\\memu\\Gogi.js":"10"},{"size":949,"mtime":1608132455480,"results":"11","hashOfConfig":"12"},{"size":2450,"mtime":1608228386956,"results":"13","hashOfConfig":"12"},{"size":1195,"mtime":1608217411109,"results":"14","hashOfConfig":"12"},{"size":8220,"mtime":1608137271876,"results":"15","hashOfConfig":"12"},{"size":3088,"mtime":1608229040381,"results":"16","hashOfConfig":"12"},{"size":115,"mtime":1608217736587,"results":"17","hashOfConfig":"12"},{"size":119,"mtime":1608228083027,"results":"18","hashOfConfig":"12"},{"size":225,"mtime":1608137303917,"results":"19","hashOfConfig":"12"},{"size":167,"mtime":1608138089032,"results":"20","hashOfConfig":"12"},{"size":9968,"mtime":1608229616949,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1wtemlz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\vscode\\webdevpractice\\src\\sections\\Foot.js",["45"],"\r\nimport React, { Component } from 'react';\r\nimport {Footer } from 'react-materialize';\r\n\r\n\r\nfunction Foot () {\r\n    return (\r\n        <Footer\r\n            className=\"example\"\r\n            copyrights=\"&copy 2015 Copyright Text\"\r\n            links={<ul><li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li><li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li><li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li><li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li></ul>}\r\n            moreLinks={<a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>}\r\n            >\r\n            <h5 className=\"white-text\">\r\n                Footer Content\r\n            </h5>\r\n            <p className=\"grey-text text-lighten-4\">\r\n                You can use rows and columns here to organize your footer content.\r\n            </p>\r\n        </Footer>\r\n    );\r\n}\r\n\r\n\r\nexport default Foot;","C:\\vscode\\webdevpractice\\src\\sections\\Login.js",[],"C:\\vscode\\webdevpractice\\src\\index.js",[],["46","47"],"C:\\vscode\\webdevpractice\\src\\sections\\Register.js",["48"],"\r\nimport React, { Component, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {TextInput} from 'react-materialize';\r\n\r\nconst Register = () =>{\r\n  const [ userID, setUserID ]  = useState('');\r\n  const [ userPW, setUserPW ]  = useState('');\r\n  const [ userName, setUserName ]  = useState('');\r\n  const [ phoneNum, setPhoneNum ]  = useState('');\r\n    \r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    addUser()\r\n        .then((response) =>{\r\n            console.log(response.data);\r\n        })\r\n    // this.setState({\r\n    //     userEmail: '',\r\n    //     userName: '',\r\n    //     userActive: '' \r\n    // })\r\n    // window.location.reload();\r\n  }\r\n  const onChangeUserID = (e) =>{\r\n    setUserID(e.target.value);\r\n  }\r\n  const onChangeUserPW = (e) =>{\r\n    setUserPW(e.target.value);\r\n  }\r\n  const onChangeUserName = (e) =>{\r\n    setUserName(e.target.value);\r\n  }\r\n  const onChangePhoneNum = (e) =>{\r\n    setPhoneNum(e.target.value);\r\n  }\r\n  const addUser = () => {\r\n    const url = '/api/users/signup';\r\n    return axios.post(url,\r\n    {\r\n      \"userID\" : userID,\r\n      \"userPW\" : userPW,\r\n      \"userName\" : userName,\r\n      \"phoneNum\" : phoneNum\r\n    })\r\n    // const formData = new FormData();\r\n    // formData.append('userID',this.state.userID);\r\n    // formData.append('userPW',this.state.userPW);\r\n    // formData.append('userName',this.state.userName);\r\n    // formData.append('phoneNum',this.state.phoneNum);\r\n    // console.log(\"userID: \",this.state.userID);\r\n    // console.log(\"userPW: \",this.state.userPW);\r\n    // console.log(\"userName: \",this.state.userName);\r\n    // console.log(\"phoneNum: \",this.state.phoneNum);\r\n    \r\n    // for (let key of formData.keys()) {\r\n    //     console.log(\"key : \" + key);\r\n    // }\r\n    // for (let value of formData.values()) {\r\n    //     console.log(\"values : \"+value);\r\n    // }\r\n    // const config = {\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     }\r\n    // }\r\n    //return post(url, formData);\r\n\r\n  }\r\n\r\n  return(\r\n    <div className=\"container\">\r\n      <div className=\"account-form-wrapper\">\r\n      <h3>Join</h3>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>아이디</th>\r\n              <td><TextInput\r\n                email\r\n                error=\"Email 형식을 지켜주세요\"\r\n                id=\"TextInput-4\"\r\n                label=\"Email\"\r\n                success=\"Great\"\r\n                name=\"userID\" value ={userID} onChange={onChangeUserID}\r\n                validate\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <th>비밀번호</th>\r\n              <td><TextInput\r\n                password\r\n                id=\"TextInput-4\"\r\n                label=\"Password\"\r\n                name=\"userPW\" value ={userPW} onChange={onChangeUserPW}\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <th>이름</th>\r\n              <td><TextInput\r\n                id=\"TextInput-4\"\r\n                label=\"First Name\"\r\n                name=\"userName\" value ={userName} onChange={onChangeUserName}\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <th>핸드폰번호</th>\r\n              <td><TextInput\r\n                icon=\"phone\"\r\n                id=\"TextInput-4\"\r\n                label=\"phone\"\r\n                name=\"phoneNum\" value ={phoneNum} onChange={onChangePhoneNum}\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan='2'><input type='submit' value='회원가입'/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n// class Register extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state ={\r\n//             userID: '',\r\n//             userPW: '' ,\r\n//             userName: '',\r\n//             phoneNum: ''\r\n//         }\r\n//     }\r\n//     handleFormSubmit = (e) => {\r\n//         e.preventDefault()\r\n//         this.addUser()\r\n//             .then((response) =>{\r\n//                 console.log(response.data);\r\n//             })\r\n//         // this.setState({\r\n//         //     userEmail: '',\r\n//         //     userName: '',\r\n//         //     userActive: '' \r\n//         // })\r\n//         // window.location.reload();\r\n//     }\r\n\r\n//     handleValueChange = (e) =>{\r\n//         let nextState = {};\r\n//         nextState[e.target.name] = e.target.value;\r\n//         this.setState(nextState);\r\n//     }\r\n\r\n//     addUser = () => {\r\n//         const url = '/api/users/signup';\r\n//         return axios.post(url,\r\n//         {\r\n//           \"userID\" : this.state.userID,\r\n//           \"userPW\" : this.state.userPW,\r\n//           \"userName\" : this.state.userName,\r\n//           \"phoneNum\" : this.state.phoneNum\r\n//         })\r\n//         // const formData = new FormData();\r\n//         // formData.append('userID',this.state.userID);\r\n//         // formData.append('userPW',this.state.userPW);\r\n//         // formData.append('userName',this.state.userName);\r\n//         // formData.append('phoneNum',this.state.phoneNum);\r\n//         // console.log(\"userID: \",this.state.userID);\r\n//         // console.log(\"userPW: \",this.state.userPW);\r\n//         // console.log(\"userName: \",this.state.userName);\r\n//         // console.log(\"phoneNum: \",this.state.phoneNum);\r\n        \r\n//         // for (let key of formData.keys()) {\r\n//         //     console.log(\"key : \" + key);\r\n//         // }\r\n//         // for (let value of formData.values()) {\r\n//         //     console.log(\"values : \"+value);\r\n//         // }\r\n//         // const config = {\r\n//         //     headers: {\r\n//         //         'Content-Type': 'application/json'\r\n//         //     }\r\n//         // }\r\n//         //return post(url, formData);\r\n\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <div className=\"container\">\r\n//               <div className=\"account-form-wrapper\">\r\n//               <h3>Join</h3>\r\n//               <form onSubmit={this.handleFormSubmit}>\r\n//                 <table>\r\n//                   <tbody>\r\n//                     <tr>\r\n//                       <th>아이디</th>\r\n//                       <td><TextInput\r\n//                         email\r\n//                         error=\"Email 형식을 지켜주세요\"\r\n//                         id=\"TextInput-4\"\r\n//                         label=\"Email\"\r\n//                         success=\"Great\"\r\n//                         name=\"userID\" value ={this.state.userID} onChange={this.handleValueChange}\r\n//                         validate\r\n//                       /></td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <th>비밀번호</th>\r\n//                       <td><TextInput\r\n//                         password\r\n//                         id=\"TextInput-4\"\r\n//                         label=\"Password\"\r\n//                         name=\"userPW\" value ={this.state.userPW} onChange={this.handleValueChange}\r\n//                       /></td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <th>이름</th>\r\n//                       <td><TextInput\r\n//                         id=\"TextInput-4\"\r\n//                         label=\"First Name\"\r\n//                         name=\"userName\" value ={this.state.userName} onChange={this.handleValueChange}\r\n//                       /></td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <th>핸드폰번호</th>\r\n//                       <td><TextInput\r\n//                         icon=\"phone\"\r\n//                         id=\"TextInput-4\"\r\n//                         label=\"phone\"\r\n//                         name=\"phoneNum\" value ={this.state.phoneNum} onChange={this.handleValueChange}\r\n//                       /></td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <td colSpan='2'><input type='submit' value='회원가입'/></td>\r\n//                     </tr>\r\n//                   </tbody>\r\n//                 </table>\r\n//               </form>\r\n//             </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Register;","C:\\vscode\\webdevpractice\\src\\sections\\Navlist.js",["49","50"],"C:\\vscode\\webdevpractice\\src\\recoil\\signStatus.js",[],"C:\\vscode\\webdevpractice\\src\\recoil\\SignStatus.js",[],"C:\\vscode\\webdevpractice\\src\\memu\\index.js",[],"C:\\vscode\\webdevpractice\\src\\sections\\index.js",[],"C:\\vscode\\webdevpractice\\src\\memu\\Gogi.js",["51"],{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":51,"column":13,"nodeType":"62","endLine":51,"endColumn":33},{"ruleId":"60","severity":1,"message":"63","line":61,"column":17,"nodeType":"62","endLine":61,"endColumn":83},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]